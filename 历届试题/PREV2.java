package algorithm.Lanqiao.历届试题;

import java.util.Scanner;

/**
 * 历届试题 打印十字图
 时间限制：1.0s   内存限制：256.0MB
 提交此题   锦囊1   锦囊2
 问题描述
 小明为某机构设计了一个十字型的徽标（并非红十字会啊），如下所示：

 ..$$$$$$$$$$$$$..
 ..$...........$..
 $$$.$$$$$$$$$.$$$
 $...$.......$...$
 $.$$$.$$$$$.$$$.$
 $.$...$...$...$.$
 $.$.$$$.$.$$$.$.$
 $.$.$...$...$.$.$
 $.$.$.$$$$$.$.$.$
 $.$.$...$...$.$.$
 $.$.$$$.$.$$$.$.$
 $.$...$...$...$.$
 $.$$$.$$$$$.$$$.$
 $...$.......$...$
 $$$.$$$$$$$$$.$$$
 ..$...........$..
 ..$$$$$$$$$$$$$..
 对方同时也需要在电脑dos窗口中以字符的形式输出该标志，并能任意控制层数。

 输入格式
 一个正整数 n (n<30) 表示要求打印图形的层数。
 输出格式
 对应包围层数的该标志。
 样例输入1
 1
 样例输出1
 ..$$$$$..
 ..$...$..
 $$$.$.$$$
 $...$...$
 $.$$$$$.$
 $...$...$
 $$$.$.$$$
 ..$...$..
 ..$$$$$..
 样例输入2
 3
 样例输出2
 ..$$$$$$$$$$$$$..
 ..$...........$..
 $$$.$$$$$$$$$.$$$
 $...$.......$...$
 $.$$$.$$$$$.$$$.$
 $.$...$...$...$.$
 $.$.$$$.$.$$$.$.$
 $.$.$...$...$.$.$
 $.$.$.$$$$$.$.$.$
 $.$.$...$...$.$.$
 $.$.$$$.$.$$$.$.$
 $.$...$...$...$.$
 $.$$$.$$$$$.$$$.$
 $...$.......$...$
 $$$.$$$$$$$$$.$$$
 ..$...........$..
 ..$$$$$$$$$$$$$..
 提示
 请仔细观察样例，尤其要注意句点的数量和输出位置。
 */

/**
 *
 * 中心对称图形，先描绘1/4 然后补全
 *
 *
 */
public class PREV2 {
    private static final String A="$";
    private static final String B=".";
    public static void main(String[] args) {
        Scanner in=new Scanner(System.in);
        int temp=in.nextInt();
        int n=(temp-1)*4+9;

        int m=n/2;
        //设置起点区
        String[][] map=new String[m+1][m+1];
        map[0][0]=B;
        map[0][1]=B;
        map[1][0]=B;
        map[1][1]=B;
        for (int i = 0; i <=temp*2 ; i++) {
            String ts=i%2==0?A:B;
            int tm=m-i;
            for (int j = 0; j < 3; j++) {
                map[tm][tm-j]=ts;
                map[tm-j][tm]=ts;
            }
            for (int j = 1; j <= i; j++) {
                map[tm+j][tm-2]=ts;
                map[tm-2][tm+j]=ts;
            }
        }

        //中心对称输出图形
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (i<=m&&j<=m){//第二象限
                    System.out.print(map[i][j]);
                }
                if (i<=m&&j>m){//一
                    System.out.print(map[i][j-(j%(m+1)+1)*2]);
                }
                if (i>m&&j<=m){//三
                    System.out.print(map[i-(i%(m+1)+1)*2][j]);
                }
                if (i>m&&j>m){//四
                    System.out.print(map[i-(i%(m+1)+1)*2][j-(j%(m+1)+1)*2]);
                }
            }
            System.out.println();
        }
    }
}
